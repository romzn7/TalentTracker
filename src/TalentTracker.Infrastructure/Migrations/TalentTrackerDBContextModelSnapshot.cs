// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TalentTracker.Infrastructure;

#nullable disable

namespace TalentTracker.Infrastructure.Migrations
{
    [DbContext(typeof(TalentTrackerDBContext))]
    partial class TalentTrackerDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("candidateseq", "tt")
                .IncrementsBy(10);

            modelBuilder.HasSequence("eventlogseq", "tt")
                .IncrementsBy(10);

            modelBuilder.Entity("TalentTracker.Domain.Aggregates.Candidates.Entities.Candidate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<long>("Id"), "candidateseq", "tt");

                    b.Property<int>("AddedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CandidateGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeTextComment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeIntervalToCall")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Candidates", "tt");
                });

            modelBuilder.Entity("TalentTracker.Domain.Aggregates.Events.Entities.EventLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<long>("Id"), "eventlogseq", "tt");

                    b.Property<int>("AddedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("EventLogGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EventTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EventLogGUID")
                        .IsUnique();

                    b.HasIndex("EventTypeId");

                    b.ToTable("EventLogs", "tt");
                });

            modelBuilder.Entity("TalentTracker.Domain.Aggregates.Events.Enumerations.EventType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("EventTypes", "tt");
                });

            modelBuilder.Entity("TalentTracker.Shared.DomainDesign.DbContextBase<TalentTracker.Infrastructure.TalentTrackerDBContext>+StringSplitResult", b =>
                {
                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("StringSplitResult", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("TalentTracker.Domain.Aggregates.Candidates.Entities.Candidate", b =>
                {
                    b.OwnsOne("TalentTracker.Domain.Aggregates.Candidates.ValueObjects.SocialMediaLinks", "SocialMediaLinks", b1 =>
                        {
                            b1.Property<long>("CandidateId")
                                .HasColumnType("bigint");

                            b1.Property<string>("GithubProfileUrl")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LinkedinProfileUrl")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CandidateId");

                            b1.ToTable("Candidates", "tt");

                            b1.WithOwner()
                                .HasForeignKey("CandidateId");
                        });

                    b.Navigation("SocialMediaLinks")
                        .IsRequired();
                });

            modelBuilder.Entity("TalentTracker.Domain.Aggregates.Events.Entities.EventLog", b =>
                {
                    b.HasOne("TalentTracker.Domain.Aggregates.Events.Enumerations.EventType", "EventType")
                        .WithMany()
                        .HasForeignKey("EventTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("EventType");
                });
#pragma warning restore 612, 618
        }
    }
}
